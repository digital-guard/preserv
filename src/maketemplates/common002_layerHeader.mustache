	@# pk{{pack_id}}_p{{file}} - ETL extrating to PostgreSQL/PostGIS the {{layername_root}} datatype
	@echo
	@echo "------------------------------------------"
	@echo "------ {{isolabel_ext}}  ------"
	@echo "------ Layer tipo {{layername}}  ------"
	@echo "-- Incluindo dados do arquivo-{{file}} do package-{{fullPkID}} na base $(pg_db) --"
	@echo " Nome-hash do arquivo-{{file}}: {{sha256file}}"
	@echo " Tabela do layer: {{tabname}}"
	@echo " Sub-arquivos do arquivo-{{file}} com o conteÃºdo alvo: {{#orig_filename_string_extract}}{{orig_filename_string_extract}}{{/orig_filename_string_extract}}{{^orig_filename_string_extract}}*{{orig_filename}}*{{/orig_filename_string_extract}}"
	@echo " Tema dos sub-arquivos: {{#file_data}}{{file_data.name}}{{/file_data}}"
	@echo "Run with tmux and sudo! (DANGER: seems not idempotent on psql)"
	@whoami
	@echo "Above user is root? If not, you have permissions for all paths?"
ifneq ($(nointeraction),y)
	@read -p "[Press ENTER to continue or Ctrl+C to quit]" _press_enter_
endif

ifeq (,$(wildcard $(orig)/{{sha256file}}))
	@echo " File {{sha256file}} not exists in orig=$(orig)"
	@echo " Download file {{sha256file}} to $(orig) from dl.digital-guard.org?"
	@echo " If it doesn't download, inform the correct value of the orig variable."
ifneq ($(nointeraction),y)
	@read -p "[Press ENTER to download or Ctrl+C to quit or inform orig]" _press_enter_
endif
	@echo " Downloading file..."
	wget -P $(orig) http://dl.digital-guard.org/{{sha256file}}
	@echo " Fix permissions ..."
	#cd /var/gits/_dg/preserv/src; sudo bash fixaPermissoes.sh $(orig)
	sudo chown postgres:www-data $(orig)/{{sha256file}} && sudo chmod 664 $(orig)/{{sha256file}}
	@echo " Download completed."
endif

{{#isCsv}}
	psql $(pg_uri_db) -c "DROP FOREIGN TABLE IF EXISTS {{tabname}}"
{{/isCsv}}
{{^isCsv}}
	psql $(pg_uri_db) -c "DROP TABLE IF EXISTS {{tabname}} CASCADE"
{{/isCsv}}
{{^isOsm}}
	@tput bold
	@echo Extracting ....
	@tput sgr0
	cd $(sandbox); 7z {{7z_opts}} x -y $(orig)/{{sha256file}} {{#orig_filename_string_extract}}{{orig_filename_string_extract}}{{/orig_filename_string_extract}}{{^orig_filename_string_extract}}"*{{orig_filename}}*"{{/orig_filename_string_extract}} ; chmod -R a+rwx . > /dev/null
{{/isOsm}}
{{#isOsm}}
	@tput bold
	@echo Copying ....
	@tput sgr0
	cd $(sandbox); cp $(orig)/{{sha256file}} "{{orig_filename}}.pbf" ; chmod -R a+rwx . > /dev/null
{{/isOsm}}
