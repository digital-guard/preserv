{{^isOsm}}
{{^multiple_files}}
{{#sql_view}}
	psql $(pg_uri_db) -c "CREATE VIEW vw{{file}}_{{tabname}} AS {{{.}}}"
	psql $(pg_uri_db) -c "SELECT ingest.any_load('{{method}}','$(sandbox)/{{#orig_filename_with_extension}}{{orig_filename}}{{/orig_filename_with_extension}}{{^orig_filename_with_extension}}{{orig_filename}}.{{extension}}{{/orig_filename_with_extension}}','{{layername}}','vw{{file}}_{{tabname}}','{{fullPkID}}','{{sha256file}}',array[]::text[])"
	psql $(pg_uri_db) -c "DROP VIEW vw{{file}}_{{tabname}}"
{{/sql_view}}
{{^sql_view}}
	psql $(pg_uri_db) -c "SELECT ingest.any_load('{{method}}','$(sandbox)/{{#orig_filename_with_extension}}{{orig_filename}}{{/orig_filename_with_extension}}{{^orig_filename_with_extension}}{{orig_filename}}.{{extension}}{{/orig_filename_with_extension}}','{{layername}}','{{tabname}}','{{fullPkID}}','{{sha256file}}',array{{{sql_select}}})"
{{/sql_view}}
	@echo "Confira os resultados nas tabelas ingest.donated_packcomponent e {{#isCadLayer}}ingest.cadastral_asis{{/isCadLayer}}{{^isCadLayer}}ingest.feature_asis{{/isCadLayer}}".
{{/multiple_files}}
{{#isCsv}}
	psql $(pg_uri_db) -c "DROP FOREIGN TABLE IF EXISTS {{tabname}}"
{{/isCsv}}
{{/isOsm}}
{{#isOsm}}
	psql $(pg_uri_db) -c "SELECT ingest.osm_load('$(sandbox)/{{orig_filename}}.pbf','{{layername}}','vw{{file}}_{{tabname}}','{{fullPkID}}','{{sha256file}}',array[]::text[])"
	psql $(pg_uri_db) -c "DROP VIEW vw{{file}}_{{tabname}}"
{{/isOsm}}
