{{^isOsm}}
{{^multiple_files}}
{{#sql_view}}
	psql $(pg_uri_db) -c "CREATE VIEW vw{{file}}_$(tabname) AS {{{.}}}"
	psql $(pg_uri_db) -c "SELECT ingest.any_load('{{method}}','$(sandbox)/{{orig_filename}}','$(layername)','vw{{file}}_$(tabname)','$(fullPkID)','$(part{{file}}_file)',array[]::text[])"
	psql $(pg_uri_db) -c "DROP VIEW vw{{file}}_$(tabname)"
{{/sql_view}}
{{^sql_view}}
	psql $(pg_uri_db) -c "SELECT ingest.any_load('{{method}}','$(sandbox)/{{orig_filename}}','$(layername)','$(tabname)','$(fullPkID)','$(part{{file}}_file)',array{{{sql_select}}})"
{{/sql_view}}
	@echo "Confira os resultados nas tabelas ingest.layer_file e {{#isCadLayer}}ingest.cadastral_asis{{/isCadLayer}}{{^isCadLayer}}ingest.feature_asis{{/isCadLayer}}".
{{/multiple_files}}
{{#isCsv}}
	psql $(pg_uri_db) -c "DROP FOREIGN TABLE IF EXISTS $(tabname)"
{{/isCsv}}
{{/isOsm}}
{{#isOsm}}
{{#layers}}
{{#geoaddress}}
	psql $(pg_uri_db) -c "CREATE VIEW vw{{file}}_$(tabname) AS SELECT way, tags - ARRAY['addr:housenumber','addr:street'] || jsonb_objslice(ARRAY['addr:housenumber','addr:street'], tags, ARRAY['house_number','via_name']) AS tags FROM jplanet_osm_point WHERE tags ?| ARRAY['addr:housenumber','addr:street'] "
{{/geoaddress}}
	psql $(pg_uri_db) -c "SELECT ingest.osm_load('$(sandbox)/{{orig_filename}}.pbf','$(layername)','vw{{file}}_$(tabname)','$(fullPkID)','$(part{{file}}_file)',array[]::text[])"
{{/layers}}
{{/isOsm}}
