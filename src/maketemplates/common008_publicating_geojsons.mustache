publicating_geojsons_{{layername_root}}: isolabel   = {{isolabel_ext}}
publicating_geojsons_{{layername_root}}: folder     = {{path_root}}
publicating_geojsons_{{layername_root}}: pretty_opt = 3
publicating_geojsons_{{layername_root}}: view       = vw{{file}}_{{tabname}}_publicating
publicating_geojsons_{{layername_root}}:
	mkdir -m777 -p $(folder)
	@rm -rf $(folder)/*.geojson
	@echo "--- Gerando arquivos de pontos em $(folder) ---"
	psql $(pg_uri_db) -c "SELECT ingest.publicating_geojsons('{{layername_root}}','$(isolabel)','$(folder)','{{buffer_type}}');"

	@echo "--- Gerando geomosaico em $(folder) ---"
	psql $(pg_uri_db) -c "DROP VIEW IF EXISTS $(view) CASCADE;"
	psql $(pg_uri_db) -c "CREATE VIEW $(view) AS SELECT * FROM  geohash_GeomsMosaic_jinfo( (SELECT kx_profile->'ghs_distrib_mosaic' from ingest.donated_packcomponent WHERE id=(SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}')), '{\"density_km2\":\"val\",\"area_km2\":\"val\",\"area\":\"val\"}  '::jsonb, (SELECT ingest.buffer_geom(geom,{{buffer_type}}) FROM ingest.vw01full_jurisdiction_geom where isolabel_ext='$(isolabel)'));"
{{^isGeoaddress}}
	psql $(pg_uri_db) -c "CREATE VIEW $(view)_adjusted AS SELECT r.ghs, (r.info || jsonb_build_object('ghs_items', n, 'ghs_bytes', bytes, 'size', size, 'size_unit', size_unit, 'size_unitDensity', round((size::float/(info->'area_km2')::float),0.01) , 'ghs_itemsDensity', round((n::float/(info->'area_km2')::float),0.01), 'ghs_area', round(((info->'area_km2')::float),0.01) )) AS info, t.geom \
	FROM ( \
	SELECT p.geom, COUNT(*) AS n, SUM(length(St_asGeoJson(ST_Intersection( p.geom, f.geom )))) AS bytes, round((CASE (SELECT geomtype FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') WHEN 'line' THEN SUM(ST_Length(ST_Intersection( p.geom, f.geom ), true))/1000  WHEN 'poly' THEN SUM(ST_Area(ST_Intersection( p.geom, f.geom ),true))/1000000.0  END),0.01) AS size, (SELECT lineage->'feature_asis_summary'->'size_unit' FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') AS size_unit  \
	FROM $(view) p \
	LEFT JOIN ingest.feature_asis f \
	ON ST_Contains(p.geom,ST_PointOnSurface(f.geom)) AND f.file_id=(SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') \
	GROUP BY 1) t \
	LEFT JOIN $(view) r \
	ON t.geom = r.geom ;"
{{/isGeoaddress}}
{{#isGeoaddress}}
	psql $(pg_uri_db) -c "CREATE VIEW $(view)_adjusted AS SELECT r.ghs, (r.info || jsonb_build_object('ghs_items', n, 'ghs_bytes', bytes, 'ghs_itemsDensity', round(((info->'density_km2')::float),0.01), 'ghs_area', round(((info->'area_km2')::float),0.01))) AS info, t.geom \
	FROM ( \
	SELECT p.geom, COUNT(*) AS n, SUM(length(St_asGeoJson( f.geom ))) AS bytes  \
	FROM $(view) p \
	LEFT JOIN ingest.feature_asis f \
	ON ST_Contains(p.geom,f.geom) AND f.file_id=(SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') \
	GROUP BY 1) t \
	LEFT JOIN $(view) r \
	ON t.geom = r.geom ;"
{{/isGeoaddress}}
	psql $(pg_uri_db) -c "SELECT write_geojsonb_features('$(view)_adjusted','$(folder)/geohashes.geojson', 't1.geom', 'ghs, (info->''ghs_items'')::int AS ghs_items, (info->''ghs_len'')::int AS ghs_len, (info->''ghs_itemsDensity'')::float AS ghs_itemsDensity, (info->''ghs_area'')::float AS ghs_area, {{^isGeoaddress}}(info->''size'') AS size, (info->''size_unit'') AS size_unit, (info->''size_unitDensity'') AS size_unitDensity, 'ghsval_unit','ghs_bytes',{{/isGeoaddress}}{{#isGeoaddress}}'ghsval_unit','ghs_items',{{/isGeoaddress}}(info->''ghs_bytes'') AS ghs_bytes', NULL, NULL, $(pretty_opt), 5);"
{{^isGeoaddress}}
	psql $(pg_uri_db) -c "UPDATE ingest.donated_packcomponent \
	SET proc_step=6, kx_profile = kx_profile || jsonb_build_object('ghs_distrib_mosaic', (SELECT jsonb_object_agg(ghs, (info->>'ghs_items')::int) FROM $(view)_adjusted)) \
	WHERE id=(SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') ;"
{{/isGeoaddress}}
{{#isGeoaddress}}
	psql $(pg_uri_db) -c "UPDATE ingest.donated_packcomponent \
	SET proc_step=6 \
	WHERE id=(SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}') ;"
{{/isGeoaddress}}
	psql $(pg_uri_db) -c "DROP VIEW IF EXISTS $(view)_adjusted CASCADE;"
	psql $(pg_uri_db) -c "DROP VIEW IF EXISTS $(view) CASCADE;"
	make audit-geojsons_{{layername_root}} pg_db=$(pg_db)

audit-geojsons_{{layername_root}}: folder = {{path_root}}
audit-geojsons_{{layername_root}}:
	@ls -lS   $(folder)/*.geojson | awk 'BEGIN {print "-- MÉDIA:"} $$5 {n=n+1;s=s+$$5;} END {print "\tnum arquivos: " n; print "\ttamanho médio: " s/(1024*n) " KiB" }'
	@ls -lhS  $(folder)/*.geojson | head | awk 'BEGIN {print "-- MAIORES:"} $$5 {print $$5 " | " $$9;}'
	@ls -lhSr $(folder)/*.geojson | head | awk 'BEGIN {print "-- MENORES:"} $$5 {print $$5 " | " $$9;}'

change_parameters_{{layername_root}}: isolabel      = {{isolabel_ext}}
change_parameters_{{layername_root}}: threshold_sum = 1000000
change_parameters_{{layername_root}}: threshold     = 100000
change_parameters_{{layername_root}}: heuristic     = 3
change_parameters_{{layername_root}}:
	psql $(pg_uri_db) -c "UPDATE ingest.donated_packcomponent SET lineage = jsonb_set(lineage, '{hcode_distribution_parameters}', '{\"p_heuristic\": $(heuristic), \"p_threshold\": $(threshold), \"p_threshold_sum\": $(threshold_sum)}', TRUE) WHERE id = (SELECT id FROM ingest.vw03full_layer_file WHERE isolabel_ext='$(isolabel)' AND ft_info->>'class_ftname'='{{layername_root}}');"

	make publicating_geojsons_{{layername_root}}
